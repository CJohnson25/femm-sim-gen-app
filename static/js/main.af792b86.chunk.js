(this["webpackJsonpfemm-sim-gen-app"]=this["webpackJsonpfemm-sim-gen-app"]||[]).push([[0],{64:function(n){n.exports=JSON.parse('{"name":"femm-sim-gen-app","homepage":"http://CJohnson25.github.io/femm-sim-gen-app","version":"0.4.0","private":true,"dependencies":{"@material-ui/core":"^4.11.3","@material-ui/icons":"^4.11.2","@testing-library/jest-dom":"^5.12.0","@testing-library/react":"^11.2.6","@testing-library/user-event":"^12.8.3","clipboard-copy":"^4.0.1","fontsource-roboto":"^4.0.0","react":"^17.0.2","react-dom":"^17.0.2","react-scripts":"4.0.3","web-vitals":"^1.1.1"},"scripts":{"predeploy":"npm run build","deploy":"gh-pages -d build","start":"react-scripts start","build":"react-scripts build","test":"react-scripts test","eject":"react-scripts eject"},"eslintConfig":{"extends":["react-app","react-app/jest"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"devDependencies":{"gh-pages":"^3.1.0"}}')},81:function(n,e,t){},82:function(n,e,t){},93:function(n,e,t){"use strict";t.r(e);var a=t(0),i=t.n(a),l=t(10),c=t.n(l),r=(t(81),t(82),t(83),t(139)),o=t(140),s=t(47),d=t(30),_=t(145),h=t(131),u=t(132),b=t(146),j=t(135),g=t(136),A=t(141),m=t(95),f=t(96),x=t(148),H=t(142),O=t(137),p=t(138),T=t(57),G=t.n(T),I=t(144),C=t(3);function E(n){var e=n.children,t=i.a.useState(!1),a=Object(d.a)(t,2),l=a[0],c=a[1];return Object(C.jsx)(I.a,{open:l,title:"Copied to clipboard!",leaveDelay:1500,onClose:function(){c(!1)},children:e({copy:function(n){G()(n),c(!0)}})})}function N(n){return JSON.stringify(n,null,2).replace(/^{\n?|\n?}$/g,"").replace(/"(.*)": /g,"$1 = ").replace(/,\n/g,"\n")+'\nfunction init () \n  -- Create Doc\n  showconsole()\n  newdocument(0)\n\n  -- Init Problem\n  mi_probdef(0, UNITS, "planar", 1e-008)\n\n  -- Init Grid\n  mi_showgrid()\n  mi_setgrid(0.001, "cart")\n\n  -- Add materials\n  mi_getmaterial("Air")\n  mi_getmaterial(IRON_MATERIAL)\n  mi_getmaterial(MAGNET_GRADE)\n  if HALBACH == 1 then\n    mi_getmaterial(HALBACH_GRADE)\n  end\n\n  build_objects()\n\n  mi_zoomnatural()\nend\n\nfunction get_v_gap () \n  return get_total_height() * 2\nend\n\nfunction get_h_gap ()\n  return get_total_width() * 1\nend\n\nfunction get_bound_height()\n  return get_v_gap() * 3\nend\n\nfunction get_bound_width() \n  return get_h_gap() * 3\nend\n\nfunction get_pole_width ()\n  local pole_width = MAGNET_WIDTH + MAGNET_GAP\n  if HALBACH == 1 then\n    return pole_width + HALBACH_WIDTH + MAGNET_GAP\n  end\n\n  return pole_width\nend\n\nfunction is_halbach_taller() \n  if HALBACH == 1 then\n    if MAGNET_HEIGHT < HALBACH_HEIGHT then\n      return 1\n    end\n  end\n\n  return 0\nend\n\nfunction get_tallest_magnet_height() \n  if is_halbach_taller() == 1 then\n    return HALBACH_HEIGHT\n  end\n\n  return MAGNET_HEIGHT\nend\n\nfunction get_magnet_height_diff() \n  if HALBACH == 1 then\n    return abs(MAGNET_HEIGHT - HALBACH_HEIGHT)\n  end\n\n  return 0\nend\n\nfunction get_total_width ()\n  local width = (get_nonhalbach_count() - 1) * (MAGNET_WIDTH + MAGNET_GAP)\n\n  if HALBACH == 1 then\n    return width + get_halbach_count() * (HALBACH_WIDTH + MAGNET_GAP)\n  end\n\n  return width\nend\n\nfunction get_total_height ()\n  local total_height = get_tallest_magnet_height() * 2 + AIR_GAP\n  if BACK_IRON == 1 then\n    return total_height + BACK_IRON_HEIGHT * 2\n  end\n\n  return total_height\nend\n\nfunction get_halbach_count() \n  return POLE_COUNT\nend\n\nfunction get_nonhalbach_count() \n  return POLE_COUNT + 1 \nend\n\nfunction get_total_magnet_count ()\n  local count = get_nonhalbach_count()\n\n  if HALBACH == 1 then\n    return count + get_halbach_count()\n  end\n\n  return count\nend\n\n\n\n\n\nfunction build_objects ()\n  build_air_bounds()\n  -- Build the sides separately\n  build_rotor(0)\n  build_rotor(1)\n  build_analysis_nodes()\nend\n\nfunction build_air_bounds()\n  build_block(0, 0, get_bound_width() , get_bound_height(), "Air", "corner", 0)\nend\n\nfunction build_rotor(side) \n  build_rotor_magnets(side)\n  if BACK_IRON == 1 then\n    local x = get_h_gap()\n    local y = get_v_gap() - BACK_IRON_HEIGHT\n    if side == 1 then \n      y = get_v_gap() + AIR_GAP + get_tallest_magnet_height() * 2\n    end\n    build_rotor_iron(x, y)\n  end\nend\n\nfunction build_rotor_magnets (side)\n  local count = get_total_magnet_count()\n  \n  local modulus = 2\n  if HALBACH == 1 then \n    modulus = 4\n  end\n  \n  -- init horizontal offset at h gap\n  local current_x_offset = get_h_gap()\n  -- init horizontal offset at v gap. Add gap for the other side\n  local y_offset = get_v_gap()\n\n  local offset = 90\n  if HALBACH == 1 then\n    offset = 0\n  end\n\n  for i = 0, count - 1 do\n    local direction = (360/modulus) * (mod(i, modulus) + 1) + offset\n    if side == 1 then\n      direction =  (360/modulus) * (modulus - mod(i, modulus) + 1) + offset\n    end\n\n    local is_halbach = 0\n    local is_end = 0\n    local width = MAGNET_WIDTH\n    local current_y_offset = y_offset\n    if side == 1 then\n      current_y_offset = current_y_offset + AIR_GAP + get_tallest_magnet_height()\n    end\n    local height_diff = get_magnet_height_diff(\n\n    -- If iterating Halbach and If current iteration is halbach magnet\n    if HALBACH == 1 and mod(i, 2) == 1 then\n      is_halbach = 1\n      width = HALBACH_WIDTH\n      if side == 1 then\n        if not is_halbach_taller() then\n          current_y_offset = current_y_offset + height_diff\n        end\n      end\n    else\n      if side == 1 then\n        if is_halbach_taller() then\n          current_y_offset = current_y_offset + height_diff\n        end\n      end\n    end\n\n    -- First or last iteration are half magnets\n    if i == 0 or i == count - 1 then\n      is_end = 1\n      width = width/2\n    end\n\n    build_magnet(current_x_offset, current_y_offset, direction, is_halbach, is_end)\n    current_x_offset = current_x_offset + width + MAGNET_GAP\n  end\nend\n\nfunction build_magnet (x, y, direction, is_halbach, is_end)\n  local w = MAGNET_WIDTH\n  local h = MAGNET_HEIGHT\n  local grade = MAGNET_GRADE\n\n  if is_halbach == 1 then\n    w = HALBACH_WIDTH\n    h = HALBACH_HEIGHT\n    grade = HALBACH_GRADE\n  end \n\n  if is_end == 1 then\n    w = w/2\n  end\n\n  build_block(x, y, w, h, grade, "center", direction)\nend\n\n\nfunction build_rotor_iron (x, y)\n  build_block(x, y, get_total_width(), BACK_IRON_HEIGHT, IRON_MATERIAL, center, 0)\nend\n\nfunction build_block(x, y, w, h, material, label_position, direction)\n  local x1 = x + w\n  local y1 = y + h\n\n  mi_addnode(x, y)\n  mi_addnode(x1, y)\n  mi_addnode(x, y1)\n  mi_addnode(x1, y1)\n\n  mi_addsegment(x, y, x1, y)\n  mi_addsegment(x1, y, x1, y1)\n  mi_addsegment(x, y1, x1, y1)\n  mi_addsegment(x, y1, x, y)\n\n  local labelX = x + w/2\n  local labelY = y + h/2\n  if (label_position == "corner") then\n    labelX = x + w/8\n    labelY = y + h/8\n  end\n  mi_addblocklabel(labelX, labelY)\n  mi_selectlabel(labelX, labelY)\n  mi_setblockprop(material, 1, 0,"", direction)\n  mi_clearselected()\nend\n\nfunction build_analysis_nodes () \n  local x = get_h_gap()\n  local x1 = x + get_total_width()\n  local y = get_v_gap() + AIR_GAP/2 + MAGNET_HEIGHT\n  \n  mi_addnode(x, y)\n  mi_addnode(x1, y)\nend\n\nfunction analyze_problem ()\n  \nend\n\ninit()\n'}function y(){var n=["MAGNET_GRADE","HALBACH_GRADE","IRON_MATERIAL"],e={UNITS:"millimeters",MAGNET_WIDTH:1,MAGNET_HEIGHT:1,MAGNET_GRADE:"N50",HALBACH:0,HALBACH_WIDTH:1,HALBACH_HEIGHT:1,HALBACH_GRADE:"N50",BACK_IRON:0,BACK_IRON_HEIGHT:1,IRON_MATERIAL:"1006 Steel",POLE_COUNT:5,AIR_GAP:1,MAGNET_GAP:0},t=i.a.useState(e),a=Object(d.a)(t,2),l=a[0],c=a[1],r=i.a.useState(e.HALBACH),o=Object(d.a)(r,2),T=o[0],G=o[1],I=i.a.useState(e.BACK_IRON),y=Object(d.a)(I,2),v=y[0],B=y[1],M=i.a.useState(N(e)),L=Object(d.a)(M,2),R=L[0],w=L[1];function D(n){return n.map((function(n,e){return Object(C.jsx)(_.a,{value:n,children:n},e)}))}function P(e){var t=e.target.value,a=n.includes(e.target.name),i=t.match(/^[0-9]+$|^[0-9]+\.[0-9]*$/);(a||i)&&(l[e.target.name]=t),i&&(l[e.target.name]=parseFloat(t)),c(Object(s.a)({},l)),w(N(l))}var S=D(["N30","N33","N35","N38","N40","N42","N45","N48","N50","N52","N55"]),W=D(["1006 Steel","1010 Steel","1018 Steel","1020 Steel","1117 Steel"]),k=Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.HALBACH_WIDTH,name:"HALBACH_WIDTH",label:"Halbach Width"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.HALBACH_HEIGHT,name:"HALBACH_HEIGHT",label:"Halbach Height"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsxs)(j.a,{fullWidth:!0,children:[Object(C.jsx)(g.a,{children:"Halbach Grade"}),Object(C.jsx)(A.a,{onChange:P,name:"HALBACH_GRADE",value:l.HALBACH_GRADE,children:S})]})})]}),U=Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(h.a,{item:!0,xs:6,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.BACK_IRON_HEIGHT,name:"BACK_IRON_HEIGHT",label:"Back Iron Height"})})}),Object(C.jsx)(h.a,{item:!0,xs:6,children:Object(C.jsxs)(j.a,{fullWidth:!0,children:["Iron Material",Object(C.jsx)(A.a,{onChange:P,name:"IRON_MATERIAL",value:l.IRON_MATERIAL,children:W})]})})]});return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsxs)(h.a,{container:!0,spacing:2,children:[Object(C.jsxs)(h.a,{item:!0,xs:12,children:[Object(C.jsx)("h1",{children:"Air Core Axial Flux PM motor"}),Object(C.jsx)("h2",{children:"FEMM Simulation Generator"})]}),Object(C.jsx)(h.a,{item:!0,xs:12,children:Object(C.jsx)(m.a,{children:"This form will generate a LUA script that can then be run in FEMM to produce a 2D simulation of an air-cored axial flux permanant magnet motor."})})]}),Object(C.jsxs)(h.a,{container:!0,spacing:4,children:[Object(C.jsx)(h.a,{item:!0,xs:12,children:Object(C.jsxs)(j.a,{component:"fieldset",children:[Object(C.jsx)(f.a,{component:"legend",children:"Units"}),Object(C.jsxs)(x.a,{row:!0,"aria-label":"units",onChange:P,name:"UNITS",value:l.UNITS,children:[Object(C.jsx)(u.a,{value:"millimeters",control:Object(C.jsx)(H.a,{}),label:"Millimeters"}),Object(C.jsx)(u.a,{value:"inches",control:Object(C.jsx)(H.a,{}),label:"Inches"})]})]})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.MAGNET_WIDTH,name:"MAGNET_WIDTH",label:"Magnet Width"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.MAGNET_HEIGHT,name:"MAGNET_HEIGHT",label:"Magnet Height"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsxs)(j.a,{fullWidth:!0,children:[Object(C.jsx)(g.a,{children:"Magnet Grade"}),Object(C.jsx)(A.a,{onChange:P,name:"MAGNET_GRADE",value:l.MAGNET_GRADE,children:S})]})}),Object(C.jsxs)(h.a,{item:!0,xs:12,children:[Object(C.jsx)(f.a,{component:"legend",children:"Halbach?"}),Object(C.jsx)(u.a,{control:Object(C.jsx)(O.a,{value:l.halbach,onChange:function(n){var e=n.target.checked?1:0;l.HALBACH=e,c(Object(s.a)({},l)),G(e),w(N(l))},name:"HALBACH"}),label:T?"Yes":"No"})]}),T?k:null,Object(C.jsxs)(h.a,{item:!0,xs:12,children:[Object(C.jsx)(f.a,{component:"legend",children:"Back Iron?"}),Object(C.jsx)(u.a,{control:Object(C.jsx)(O.a,{value:l.backIron,onChange:function(n){var e=n.target.checked?1:0;l.BACK_IRON=e,c(Object(s.a)({},l)),B(e),w(N(l))},name:"BACK_IRON"}),label:v?"Yes":"No"})]}),v?U:null,Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.POLE_COUNT,name:"POLE_COUNT",label:"Pole Count"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.AIR_GAP,name:"AIR_GAP",label:"Air Gap"})})}),Object(C.jsx)(h.a,{item:!0,xs:4,children:Object(C.jsx)(u.a,{filled:"true",control:Object(C.jsx)(b.a,{onChange:P,value:l.MAGNET_GAP,name:"MAGNET_GAP",label:"Magnet Spacing"})})})]}),Object(C.jsxs)(h.a,{container:!0,spacing:3,children:[Object(C.jsxs)(h.a,{item:!0,xs:12,children:[Object(C.jsx)("h2",{children:"Output:"}),Object(C.jsx)(m.a,{children:"Copy this LUA script and paste it in the LUA console in your FEMM program."})]}),Object(C.jsx)(h.a,{item:!0,xs:12,children:Object(C.jsx)(b.a,{fullWidth:!0,multiline:!0,rows:20,rowsMax:20,value:R})}),Object(C.jsx)(h.a,{item:!0,xs:12,children:Object(C.jsx)(E,{children:function(n){var e=n.copy;return Object(C.jsx)(p.a,{variant:"contained",color:"primary",onClick:function(){return e(R)},children:"Copy"})}})})]})]})}var v=t(65),B=t.n(v),M=t(66),L=t.n(M),R=t(64),w=t(97);function D(){return Object(C.jsxs)(h.a,{container:!0,style:{marginTop:40},justify:"flex-end",children:[Object(C.jsx)(h.a,{item:!0,xs:8,children:Object(C.jsxs)(m.a,{children:["Version: ",R.version]})}),Object(C.jsx)(h.a,{item:!0,xs:1,children:Object(C.jsx)(w.a,{target:"_blank",variant:"contained",color:"primary",href:"https://www.youtube.com/channel/UCQk0CkSexTb7GQvpGxj4kxw",children:Object(C.jsx)(B.a,{})})}),Object(C.jsx)(h.a,{item:!0,xs:1,children:Object(C.jsx)(w.a,{target:"_blank",variant:"contained",color:"primary",href:"https://github.com/CJohnson25/femm-sim-gen-app/",children:Object(C.jsx)(L.a,{})})})]})}var P=function(){return Object(C.jsxs)("div",{className:"App",children:[Object(C.jsx)(r.a,{maxWidth:"sm",children:Object(C.jsx)(y,{})}),Object(C.jsx)(o.a,{style:{marginTop:40}}),Object(C.jsx)(D,{})]})},S=function(n){n&&n instanceof Function&&t.e(3).then(t.bind(null,149)).then((function(e){var t=e.getCLS,a=e.getFID,i=e.getFCP,l=e.getLCP,c=e.getTTFB;t(n),a(n),i(n),l(n),c(n)}))};c.a.render(Object(C.jsx)(i.a.StrictMode,{children:Object(C.jsx)(P,{})}),document.getElementById("root")),S()}},[[93,1,2]]]);
//# sourceMappingURL=main.af792b86.chunk.js.map