{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","defaultVals","units","magnetWidth","magnetHeight","magnetGrade","halbach","halbachWidth","halbachHeight","halbachGrade","backIron","backIronHeight","airGap","React","useState","formVals","setFormVals","showHalbachOptions","setShowHalbachOptions","showBackIronOptions","setShowBackIronOptions","HalbachOptions","Grid","item","xs","FormControlLabel","control","TextField","label","FormControl","InputLabel","Select","value","MenuItem","BackIronOptions","handleInputChange","e","newFormVals","target","name","console","log","className","Container","maxWidth","container","spacing","Typography","component","FormLabel","RadioGroup","aria-label","onChange","Radio","Switch","inputVal","checked","halbach_width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d2d60a.chunk.js","sourcesContent":["import './App.css';\r\nimport 'fontsource-roboto';\r\nimport React from 'react';\r\nimport { Container, Grid, Typography, MenuItem, FormControlLabel, FormControl, FormLabel, InputLabel, RadioGroup, Radio, Select, Switch, TextField } from '@material-ui/core';\r\n\r\nfunction App() {\r\n  const defaultVals = {\r\n    units: 'millimeters',\r\n    magnetWidth: 0,\r\n    magnetHeight: 0,\r\n    magnetGrade: 'N50',\r\n    halbach: false,\r\n    halbachWidth: 0,\r\n    halbachHeight: 0,\r\n    halbachGrade: 'N50',\r\n    backIron: false,\r\n    backIronHeight: 0,\r\n    airGap: 0\r\n  }\r\n\r\n  const [formVals, setFormVals] = React.useState(defaultVals)\r\n  const [showHalbachOptions, setShowHalbachOptions] = React.useState(defaultVals.halbach)\r\n  const [showBackIronOptions, setShowBackIronOptions] = React.useState(defaultVals.backIron)\r\n\r\n  const HalbachOptions = () => {\r\n    return (\r\n      <>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<TextField label=\"Halbach Width\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<TextField label=\"Halbach Height\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl>\r\n            <InputLabel>Halbach Grade</InputLabel>\r\n            <Select value={formVals.halbachGrade}>\r\n              <MenuItem value=\"N48\">N48</MenuItem>\r\n              <MenuItem value=\"N50\">N50</MenuItem>\r\n              <MenuItem value=\"N52\">N52</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  function handleHalbachChange(e) {\r\n    const inputVal = e.target.checked\r\n    formVals.halbach = inputVal\r\n    if (!inputVal) {\r\n      formVals.halbach_width = 0\r\n    }\r\n    setFormVals({...formVals})\r\n    setShowHalbachOptions(inputVal)\r\n  }\r\n\r\n\r\n  const BackIronOptions = () => {\r\n    return (\r\n      <>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<TextField label=\"Back Iron Height\" />}\r\n          />\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  function handleBackIronChange(e) {\r\n    const inputVal = e.target.checked\r\n    formVals.backIron = inputVal\r\n    if (!inputVal) {\r\n      formVals.backIronHeight = 0\r\n    }\r\n    setFormVals({...formVals})\r\n    setShowBackIronOptions(inputVal)\r\n  }\r\n\r\n\r\n  function handleInputChange(e) {\r\n    const newFormVals = formVals\r\n    newFormVals.[e.target.name] = e.target.value\r\n    setFormVals({...newFormVals})\r\n  }\r\n\r\nconsole.log(formVals)\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container item spacing={2} xs={10}>\r\n          <Grid item xs={12}>\r\n            <h1>FEMM Simulation Generator</h1>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>This form will produce a LUA script that can then be run in FEMM to product a simulation</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Units</FormLabel>\r\n              <RadioGroup aria-label=\"units\" onChange={handleInputChange} name=\"units\" value={formVals.units} >\r\n                <FormControlLabel value=\"millimeters\" control={<Radio />} label=\"Millimeters\" />\r\n                <FormControlLabel value=\"inches\" control={<Radio />} label=\"Inches\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <FormControlLabel\r\n              control={<TextField onChange={handleInputChange} name=\"magnetWidth\" label=\"Magnet Width\" />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControlLabel\r\n              control={<TextField onChange={handleInputChange} name=\"magnetHeight\" label=\"Magnet Height\" />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl>\r\n              <InputLabel>Magnet Grade</InputLabel>\r\n              <Select onChange={handleInputChange} name=\"magnetGrade\" value={formVals.magnetGrade}>\r\n                <MenuItem value=\"N48\">N48</MenuItem>\r\n                <MenuItem value=\"N50\">N50</MenuItem>\r\n                <MenuItem value=\"N52\">N52</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <FormLabel component=\"legend\">Halbach?</FormLabel>\r\n            <FormControlLabel\r\n              control={<Switch value={formVals.halbach} onChange={handleHalbachChange} name=\"halbach\" />}\r\n              label=\"Yes\"\r\n            />\r\n          </Grid>\r\n\r\n          {showHalbachOptions ? <HalbachOptions/> : null}\r\n\r\n          <Grid item xs={12}>\r\n            <FormLabel component=\"legend\">Back Iron?</FormLabel>\r\n            <FormControlLabel\r\n              control={<Switch value={formVals.backIron} onChange={handleBackIronChange} name=\"backIron\" />}\r\n              label=\"Yes\"\r\n            />\r\n          </Grid>\r\n\r\n          {showBackIronOptions ? <BackIronOptions/> : null}\r\n\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={<TextField onChange={handleInputChange} name=\"airGap\" label=\"Air Gap\" />}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}